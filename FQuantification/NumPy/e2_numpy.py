import numpy as np
import matplotlib.pyplot as plt

print("----------创建长度为10，值全为零的数组----------")
a = np.array([0] * 10)
print(a, '\n')

a = np.zeros(10)
print(a)
# 默认浮点型
print(a.dtype, '\n')

a = np.zeros(10, dtype=int)
print(a)
print(a.dtype)

print("\n----------创建全为1的数组----------")
a = np.ones(10)
print(a, '\n')

a = np.empty(100)
print(a)

print("\n----------NumPy 函数----------")
print(np.arange(100), '\n')
print(np.arange(2, 10), '\n')
print(np.arange(2, 10, 3), '\n')
# print(range(2, 10, 0.3))
print(np.arange(2, 10, 0.3), '\n')
print(np.linspace(0, 100, 100), '\n')
# linspace() 包含头尾元素，对象长度为101
print(np.linspace(0, 100, 101), '\n')
# arange() 不包含尾部元素
print(np.arange(0, 100), '\n')
# 将0~10均匀分成100份
print(np.linspace(0, 10, 100), '\n')
# 在区间 [-10, 10] 平均分出10000份
print(np.linspace(-10, 10, 10000), '\n')

x = np.linspace(-10, 10, 10000)
y = x**2
plt.plot(x, y)
print(plt.plot(x, y), '\n')
plt.show()

# 线性代数上的单位矩阵
print(np.eye(10))


"""
>>> Execution Result:
----------创建长度为10，值全为零的数组----------
[0 0 0 0 0 0 0 0 0 0]

[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
float64

[0 0 0 0 0 0 0 0 0 0]
int64

----------创建全为1的数组----------
[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]

[0.00000000e+000 0.00000000e+000 3.74501760e-321             nan
 6.93030212e-310 0.00000000e+000 7.21898587e+159 1.87673455e-152
 7.50573643e+247 2.31647091e-152 4.95270038e+223 8.74600729e+183
 6.43897704e+270 2.34502037e+251 3.39700467e+174 6.75719288e-109
 9.23528171e+242 2.52960802e-258 4.47593816e-091 2.99833395e-152
 2.65106778e-258 1.27731744e-152 2.99843585e-152 2.13780573e+161
 2.34840919e+251 2.02799178e+267 2.66062640e-260 1.03966718e-028
 2.46634385e-154 6.89966689e+212 2.64520265e+185 1.96086573e+243
 1.69505627e+190 2.83769810e+275 9.75388081e+199 6.90116315e-310
 6.93030212e-310 6.93030818e-310 6.93030213e-310 6.93030211e-310
 6.93030818e-310 6.93030213e-310 6.93030211e-310 6.93030818e-310
 6.93030213e-310 6.93030211e-310 6.93030213e-310 6.93030818e-310
 6.93030213e-310 6.93030211e-310 6.93030211e-310 6.93030212e-310
 6.93030818e-310 6.93030212e-310 6.93030211e-310 6.93030211e-310
 6.93030818e-310 6.93030211e-310 6.93030211e-310 6.93030211e-310
 6.93030211e-310 6.93030818e-310 6.93030211e-310 6.93030818e-310
 6.93030212e-310 6.93030212e-310 6.93030213e-310 6.93030211e-310
 6.93030818e-310 6.93030212e-310 6.93030211e-310 6.93030211e-310
 6.93030212e-310 6.93030818e-310 6.93030213e-310 6.93030212e-310
 6.93030211e-310 6.93030818e-310 6.93030212e-310 6.93030212e-310
 6.93030212e-310 6.93030212e-310 6.93030212e-310 6.93030818e-310
 6.93030212e-310 6.93030212e-310 6.93030212e-310 6.93030212e-310
 6.93030818e-310 6.93030212e-310 6.93030212e-310 6.93030212e-310
 6.93030212e-310 6.93030212e-310 6.93030212e-310 6.93030818e-310
 6.93030212e-310 6.93030212e-310 6.93030818e-310 6.93030212e-310]

----------NumPy 函数----------
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]

[2 3 4 5 6 7 8 9]

[2 5 8]

[2.  2.3 2.6 2.9 3.2 3.5 3.8 4.1 4.4 4.7 5.  5.3 5.6 5.9 6.2 6.5 6.8 7.1
 7.4 7.7 8.  8.3 8.6 8.9 9.2 9.5 9.8]

[  0.           1.01010101   2.02020202   3.03030303   4.04040404
   5.05050505   6.06060606   7.07070707   8.08080808   9.09090909
  10.1010101   11.11111111  12.12121212  13.13131313  14.14141414
  15.15151515  16.16161616  17.17171717  18.18181818  19.19191919
  20.2020202   21.21212121  22.22222222  23.23232323  24.24242424
  25.25252525  26.26262626  27.27272727  28.28282828  29.29292929
  30.3030303   31.31313131  32.32323232  33.33333333  34.34343434
  35.35353535  36.36363636  37.37373737  38.38383838  39.39393939
  40.4040404   41.41414141  42.42424242  43.43434343  44.44444444
  45.45454545  46.46464646  47.47474747  48.48484848  49.49494949
  50.50505051  51.51515152  52.52525253  53.53535354  54.54545455
  55.55555556  56.56565657  57.57575758  58.58585859  59.5959596
  60.60606061  61.61616162  62.62626263  63.63636364  64.64646465
  65.65656566  66.66666667  67.67676768  68.68686869  69.6969697
  70.70707071  71.71717172  72.72727273  73.73737374  74.74747475
  75.75757576  76.76767677  77.77777778  78.78787879  79.7979798
  80.80808081  81.81818182  82.82828283  83.83838384  84.84848485
  85.85858586  86.86868687  87.87878788  88.88888889  89.8989899
  90.90909091  91.91919192  92.92929293  93.93939394  94.94949495
  95.95959596  96.96969697  97.97979798  98.98989899 100.        ]

[  0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.  11.  12.  13.
  14.  15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.  26.  27.
  28.  29.  30.  31.  32.  33.  34.  35.  36.  37.  38.  39.  40.  41.
  42.  43.  44.  45.  46.  47.  48.  49.  50.  51.  52.  53.  54.  55.
  56.  57.  58.  59.  60.  61.  62.  63.  64.  65.  66.  67.  68.  69.
  70.  71.  72.  73.  74.  75.  76.  77.  78.  79.  80.  81.  82.  83.
  84.  85.  86.  87.  88.  89.  90.  91.  92.  93.  94.  95.  96.  97.
  98.  99. 100.]

[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]

[ 0.          0.1010101   0.2020202   0.3030303   0.4040404   0.50505051
  0.60606061  0.70707071  0.80808081  0.90909091  1.01010101  1.11111111
  1.21212121  1.31313131  1.41414141  1.51515152  1.61616162  1.71717172
  1.81818182  1.91919192  2.02020202  2.12121212  2.22222222  2.32323232
  2.42424242  2.52525253  2.62626263  2.72727273  2.82828283  2.92929293
  3.03030303  3.13131313  3.23232323  3.33333333  3.43434343  3.53535354
  3.63636364  3.73737374  3.83838384  3.93939394  4.04040404  4.14141414
  4.24242424  4.34343434  4.44444444  4.54545455  4.64646465  4.74747475
  4.84848485  4.94949495  5.05050505  5.15151515  5.25252525  5.35353535
  5.45454545  5.55555556  5.65656566  5.75757576  5.85858586  5.95959596
  6.06060606  6.16161616  6.26262626  6.36363636  6.46464646  6.56565657
  6.66666667  6.76767677  6.86868687  6.96969697  7.07070707  7.17171717
  7.27272727  7.37373737  7.47474747  7.57575758  7.67676768  7.77777778
  7.87878788  7.97979798  8.08080808  8.18181818  8.28282828  8.38383838
  8.48484848  8.58585859  8.68686869  8.78787879  8.88888889  8.98989899
  9.09090909  9.19191919  9.29292929  9.39393939  9.49494949  9.5959596
  9.6969697   9.7979798   9.8989899  10.        ]

[-10.         -9.9979998  -9.9959996 ...   9.9959996   9.9979998
  10.       ]

[<matplotlib.lines.Line2D object at 0x7f935b8bb100>]

[[1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
"""
