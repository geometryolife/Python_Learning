# 引入 NumPy 库
import numpy as np

print("----------创建矩阵----------")
# 创建一个一维的 Ndarray 对象
arr1 = np.array([1, 2, 3, 4, 5])
print(arr1)
# 输出一维数组的维度，结果为(5,)，数组包含5个元素
print(arr1.shape, '\n')

# 创建二维的 Ndarray 对象
arr2 = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
print(arr2)
# 输出二维数组的维度，结果为(2, 5)，是一个2行5列的二维数组
print(arr2.shape, '\n')

# 获取矩阵长度的行数和列数
print("二维数组的行数为: {0}".format(arr2.shape[0]))
print("二维数组的列数为: {0}".format(arr2.shape[1]))

print("\n----------修改一维矩阵和二维矩阵----------")
# 修改一维数组第4个元素的值
arr1[4] = 10
print(arr1, '\n')

# 修改二维数组第0行、第0列元素的值
arr2[0:0] = 20
print(arr2, '\n')

# 修改二维数组第1行、第2列元素的值
arr2[1:2] = 2
print(arr2, '\n')

# 对二维数组 arr2 第0行进行修改
arr2[0] = (3, 3, 3, 3, 3)
print(arr2, '\n')

print("\n----------对矩阵球和----------")
arr2 = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
# 对二维数组 arr2 求和
print(arr2.sum())

print("\n----------按列对矩阵求和----------")
# 按列对二维数组 arr2 求和
print(arr2.sum(axis=0))

print("\n----------按行对矩阵球和----------")
# 按行对二维数组 arr2 求和
print(arr2.sum(axis=1))

# 注释:
# axis 就是轴、数轴的意思，对应多维数组里的维。如 axis=None 就是对
# 数组里的所有元素求和。
# 二维数组有两个轴，0轴和1轴。
# 使用0值(轴)表示沿着每一列(行标签)索引值向下执行对应的方法。
# 使用1值(轴)表示沿着每一行(列标签)索引值向右执行对应的方法。


# >>> Execution Result:
# ----------创建矩阵----------
# [1 2 3 4 5]
# (5,)

# [[ 1  2  3  4  5]
# [ 6  7  8  9 10]]
# (2, 5)

# 二维数组的行数为: 2
# 二维数组的列数为: 5

# ----------修改一维矩阵和二维矩阵----------
# [ 1  2  3  4 10]

# [[ 1  2  3  4  5]
# [ 6  7  8  9 10]]

# [[1 2 3 4 5]
# [2 2 2 2 2]]

# [[3 3 3 3 3]
# [2 2 2 2 2]]


# ----------对矩阵球和----------
# 55

# ----------按列对矩阵求和----------
# [ 7  9 11 13 15]

# ----------按行对矩阵球和----------
# [15 40]
