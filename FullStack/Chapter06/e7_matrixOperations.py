import numpy as np

print("----------矩阵的运算----------")
arr1 = np.array([[4, 5, 6], [1, 2, 3]])
arr2 = np.array([[6, 5, 4], [3, 2, 1]])

print("\n----------矩阵的普通运算----------")

# 两个矩阵相加
print(arr1 + arr2, '\n')

# 两个矩阵相减
print(arr1 - arr2, '\n')

# 两个矩阵对应元素取余数
print(arr1 % arr2, '\n')

# 两个矩阵对应元素相乘拼接，区别于矩阵相乘
print(arr1 * arr2, '\n')

# 两个矩阵对应元素相除拼接，区别于矩阵除法(矩阵求逆)
print(arr1 / arr2, '\n')

print("\n----------矩阵相乘----------")

# 矩阵乘法必须满足矩阵乘法的条件，即第1个矩阵的列数等于第2个矩阵的行数
# arr3 为 2*3 矩阵
arr3 = np.array([[1, 2, 3], [4, 5, 6]])
# arr4 为 3*2 矩阵
arr4 = np.array([[1, 4], [2, 5], [3, 6]])

# True，满足矩阵乘法条件
print(arr3.shape[1] == arr4.shape[0], '\n')

# 矩阵乘法结果
print(arr3.dot(arr4))

print("\n----------矩阵的转置----------")

arr = np.array([[1, 2, 3], [4, 5, 6]])

# 方法1
print(arr.transpose(), '\n')

# 方法2，更简单
print(arr.T)


"""
>>> execution result:
----------矩阵的运算----------

----------矩阵的普通运算----------
[[10 10 10]
 [ 4  4  4]]

[[-2  0  2]
 [-2  0  2]]

[[4 0 2]
 [1 0 0]]

[[24 25 24]
 [ 3  4  3]]

[[0.66666667 1.         1.5       ]
 [0.33333333 1.         3.        ]]


----------矩阵相乘----------
True

[[14 32]
 [32 77]]

----------矩阵的转置----------
[[1 4]
 [2 5]
 [3 6]]

[[1 4]
 [2 5]
 [3 6]]
"""
